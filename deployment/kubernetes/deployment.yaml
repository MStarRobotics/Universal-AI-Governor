apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-governor
  namespace: ai-governor
  labels:
    app.kubernetes.io/name: universal-ai-governor
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: api
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: universal-ai-governor
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: universal-ai-governor
        app.kubernetes.io/component: api
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: ai-governor
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: ai-governor
        image: universal-ai-governor:1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: GOVERNOR_MODE
          value: "production"
        - name: GOVERNOR_LOG_LEVEL
          value: "info"
        - name: GOVERNOR_TLS_ENABLED
          value: "true"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: ai-governor-secrets
              key: jwt-secret
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ai-governor-secrets
              key: postgres-password
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: ai-governor-secrets
              key: openai-api-key
              optional: true
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: ai-governor-secrets
              key: anthropic-api-key
              optional: true
        volumeMounts:
        - name: config
          mountPath: /app/configs
          readOnly: true
        - name: policies
          mountPath: /app/policies
          readOnly: true
        - name: tls-certs
          mountPath: /app/certs
          readOnly: true
        - name: data
          mountPath: /app/data
        - name: logs
          mountPath: /app/logs
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: ai-governor-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: policies
        configMap:
          name: ai-governor-policies
      - name: tls-certs
        secret:
          secretName: ai-governor-tls
      - name: data
        persistentVolumeClaim:
          claimName: ai-governor-data
      - name: logs
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - universal-ai-governor
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "ai-governor"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      nodeSelector:
        kubernetes.io/arch: amd64
